// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(EventsDbContext))]
    [Migration("20231025125427_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EventEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Sync up new feature meeting...",
                            EndDate = new DateTime(2023, 10, 26, 9, 54, 27, 246, DateTimeKind.Local).AddTicks(8059),
                            Location = "Florida",
                            StartDate = new DateTime(2023, 10, 25, 9, 54, 27, 246, DateTimeKind.Local).AddTicks(8026),
                            Title = "SyncUp Meeting"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Follow-up Dentist...",
                            EndDate = new DateTime(2023, 10, 27, 9, 54, 27, 246, DateTimeKind.Local).AddTicks(8090),
                            Location = "San Francisco",
                            StartDate = new DateTime(2023, 10, 25, 9, 54, 27, 246, DateTimeKind.Local).AddTicks(8089),
                            Title = "Dentist appointmentt"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Daily Meeting on green room...",
                            EndDate = new DateTime(2023, 10, 28, 9, 54, 27, 246, DateTimeKind.Local).AddTicks(8094),
                            Location = "Michigan",
                            StartDate = new DateTime(2023, 10, 25, 9, 54, 27, 246, DateTimeKind.Local).AddTicks(8093),
                            Title = "Daily Metting"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Meeting with friends...",
                            EndDate = new DateTime(2023, 10, 29, 9, 54, 27, 246, DateTimeKind.Local).AddTicks(8097),
                            Location = "San Francisco",
                            StartDate = new DateTime(2023, 10, 25, 9, 54, 27, 246, DateTimeKind.Local).AddTicks(8096),
                            Title = "Friends Meeting"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
